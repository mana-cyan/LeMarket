<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemarket.data.dao.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.lemarket.data.model.Commodity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="shop" jdbcType="INTEGER" property="shop" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="storage" jdbcType="INTEGER" property="storage" />
    <result column="saled" jdbcType="INTEGER" property="saled" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="image" jdbcType="INTEGER" property="image" />
    <result column="visitCount" jdbcType="INTEGER" property="visitcount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="owner" jdbcType="INTEGER" property="owner" />
    <result column="details" jdbcType="LONGVARCHAR" property="details" />
  </resultMap>
  <insert id="insert" parameterType="com.lemarket.data.model.Commodity" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into Commodity (id, category, shop, 
      name, storage, saled, 
      price, image, visitCount, 
      status, time, owner, 
      details)
    values (#{id,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, #{shop,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{storage,jdbcType=INTEGER}, #{saled,jdbcType=INTEGER}, 
      #{price,jdbcType=REAL}, #{image,jdbcType=INTEGER}, #{visitcount,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{owner,jdbcType=INTEGER}, 
      #{details,jdbcType=LONGVARCHAR})
  </insert>
    <update id="updateImage">
      UPDATE Commodity SET image = #{imageId} WHERE id = #{commodityId};
    </update>
  <update id="updateCommodity" parameterType="com.lemarket.data.model.Commodity">
      UPDATE Commodity SET name=#{name}, details=#{details}, category=#{category}, storage=#{storage}, price=#{price},image=#{image},status=#{status} WHERE id=#{id};
  </update>
  <update id="deleteCommodity">
    UPDATE Commodity SET status=0 WHERE id = #{commodityId};
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, category, shop, name, storage, saled, price, image, visitCount, status,
    time, owner, details
    from Commodity
    WHERE status=1
    LIMIT #{beginRow}, #{pageSize};
  </select>
    <select id="selectBySaledOrder" resultMap="BaseResultMap">
      SELECT * FROM Commodity WHERE status=1 ORDER BY saled DESC LIMIT 0, 10;
    </select>
    <select id="selectById" resultMap="BaseResultMap">
      SELECT * FROM Commodity WHERE id=#{id};
    </select>
  <select id="selectPageByKindAndSaled" resultMap="BaseResultMap">
      SELECT * FROM Commodity WHERE category = #{category} AND status=1 ORDER BY saled DESC LIMIT #{beginRow}, #{pageSize};
  </select>
  <select id="selectByShopId" resultMap="BaseResultMap">
      SELECT * FROM Commodity WHERE shop = #{shopId} AND status=1 LIMIT #{beginRow}, #{pageSize};
  </select>

  <select id="selectByName" resultMap="BaseResultMap" >
    SELECT * FROM Commodity WHERE name LIKE #{word}
  </select>
  <select id="selectCountById" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM Commodity WHERE category = #{category} AND status=1;
  </select>

  <!--commodity shop 连表查询-->
  <resultMap id="CommodityWithShop" type="com.lemarket.data.model.CommodityWithShop">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="storage" jdbcType="INTEGER" property="storage" />
    <result column="saled" jdbcType="INTEGER" property="saled" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="image" jdbcType="INTEGER" property="image" />
    <result column="visitCount" jdbcType="INTEGER" property="visitcount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="owner" jdbcType="INTEGER" property="owner" />
    <result column="details" jdbcType="LONGVARCHAR" property="details" />
    <association property="shop" javaType="com.lemarket.data.model.Shop">
      <result column="sid" jdbcType="INTEGER" property="id" />
      <result column="sowner" jdbcType="INTEGER" property="owner" />
      <result column="sname" jdbcType="VARCHAR" property="name" />
      <result column="sicon" jdbcType="INTEGER" property="icon" />
      <result column="sphoneNumber" jdbcType="VARCHAR" property="phonenumber" />
      <result column="scustomerService" jdbcType="INTEGER" property="customerservice" />
      <result column="sservicePhoneNumber" jdbcType="VARCHAR" property="servicephonenumber" />
      <result column="sdescription" jdbcType="LONGVARCHAR" property="description" />
    </association>
  </resultMap>

  <select id="selectCommodityWithShopByCommodityId" resultMap="CommodityWithShop">
    SELECT c.id, c.category, c.shop, c.name, c.storage, c.saled, c.price, c.image, c.visitCount, c.status, c.time, c.owner, c.details,
      s.id as sid, s.owner as sowner, s.name as sname,
      s.icon as sicon, s.phoneNumber as sphoneNumber, s.customerService as scustomerService,
      s.servicePhoneNumber as sservicePhoneNumber, s.description as sdescription
    from Commodity c,Shop s WHERE c.id=#{id} AND c.shop = s.id AND c.status=1;
  </select>
    <select id="getCount" resultType="java.lang.Integer">
      SELECT COUNT(*) FROM lemarket.Commodity;
    </select>
  <select id="selectAllWithAllStatus" resultMap="BaseResultMap">
    select id, category, shop, name, storage, saled, price, image, visitCount, status,
      time, owner, details
    from Commodity
    LIMIT #{beginRow}, #{pageSize};
  </select>
</mapper>